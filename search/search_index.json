{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Formal Verification","text":""},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"contributors/","title":"Contributors","text":"<p>Nicol\u00e1s Arqueros, Alex Byaly, Dan Bornside, Manuel Chakravarty, James Chapman, Nicholas Clarke, Jared Corduan, Carlos Tom\u00e9 Corti\u00f1as, Duncan Coutts, William DeMeo, Marko Dimja\u0161evi\u0107, Nicolas Di Prima, Ruslan Dudin, Matthias G\u00fcdemann, Sebastien Guillemot, Kevin Hammond, Vincent Hanquez, Alasdair Hill, Ru Horlick, Michael Hueschen, Joosep J\u00e4\u00e4ger, Philipp Kant, Andre Knispel, Ryan Lemmer, Christian Lindgren, Yun Lu, Orestis Melkonian, Jordan Millar, Jean-Christophe Mincke, Jann Mueller, Damian Nadales, Ulf Norell, Michal Peyton Jones, Ashish Prajapati, Tim Sheard, Polina Vinogradova, Andrew Westberg.</p> <p>If you've contributed to the ledger but we've failed to list you here, please send us a message or post an issue</p>"},{"location":"license/","title":"License","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"mkdocs/","title":"MkDocs","text":""},{"location":"mkdocs/#references","title":"References","text":"<ul> <li>MkDocs</li> <li>MkDocs Material</li> <li>Getting Started with Material for MkDocs, by James Willet.</li> </ul>"},{"location":"cardano-ledger/intro/","title":"Introduction","text":"<p>This document is a formal specification of the functionality of the ledger on the Cardano blockchain. This includes the blockchain layer determining what is a valid block, but does not include any concurrency issues such as chain selection. The details of the background and the larger context for the design decisions formalized in this document are presented in Appendix Section\u00a0shelley-delegation-design.</p> <p>In this document, we present the most important properties that any implementation of the ledger must have. Specifically, we model the following aspects of the functionality of the ledger on the blockchain:</p> <p>In defining Cardano, we are concerned with the means to construct inductive datatypes satisfying some validity conditions. For example, we wish to consider when a sequence of transactions forms a valid ledger, or a sequence of blocks forms a valid chain.</p> <p>This document describes the methods we use to define such validity conditions and how they result in the construction of valid states. In particular, we define inference rules for operations on a blockchain as a specification of the blockchain layer of Cardano. A block validity definition is given, which is accompanied by small-step operational semantics inference rules.</p> <p>The idea behind this document is to formalise what it means for a new block, to be added to the blockchain, to be valid. Unless a new block is valid, it cannot be added to the blockchain and thereby extend it. This is needed for a system that is subscribed to the blockchain and keeps a copy of it locally.</p> <p>Each block is made up of transactions and this specification models the conditions that the different parts of a transaction must fulfill so that they can extend a ledger, which is represented here as a list of transactions. In particular, we model the following aspects:</p> <p>Preservation of value</p> <p>:   relationship between the total value of input and outputs in a new     transaction, and the unspent outputs.</p> <p>Witnesses</p> <p>:   authentication of parts of the transaction data by means of     cryptographic entities (such as signatures and private keys)     contained in these transactions.</p> <p>Delegation</p> <p>:   validity of delegation certificates, which delegate block-signing     rights.</p> <p>Update validation</p> <p>:   voting mechanism which captures the identification of the voters,     and the participants that can post update proposals.</p> <p>Stake</p> <p>:   staking rights associated to an addresses.</p> <pre><code>&lt;!-- --&gt;\n</code></pre> <p>Preservation of value</p> <p>:   Every coin in the system must be accounted for, and the total amount     is unchanged by every transaction and epoch change. In particular,     every coin is accounted for by exactly one of the following     categories:</p> <pre><code>-   Circulation (UTxO)\n\n-   Deposit pot\n\n-   Fee pot\n\n-   Reserves (monetary expansion)\n\n-   Rewards (account addresses)\n\n-   Treasury\n</code></pre> <p>Witnesses</p> <p>:   Authentication of parts of the transaction data by means of     cryptographic entities (such as signatures and private keys)     contained in these transactions.</p> <p>Delegation</p> <p>:   Validity of delegation certificates, which delegate block-signing     rights.</p> <p>Stake</p> <p>:   Staking rights associated to an address.</p> <p>Rewards</p> <p>:   Reward calculation and distribution.</p> <p>Updates</p> <p>:   The update mechanism for Shelley protocol parameters and software.</p> <p>While the blockchain protocol is a reactive system that is driven by the arrival of blocks causing updates to the ledger, the formal description is a collection of rules that compose a static description of what a valid ledger is. A valid ledger state can only be reached by applying a sequence of inference rules and any valid ledger state is reachable by applying some sequence of these rules. The specifics of the semantics we use to define and apply the rules we present in this document are explained in detail in [@small-step-semantics] (this document will really help the reader's understanding of the contents of this specification).</p> <p>The structure of the rules that we give here is such that their application is deterministic. That is, given a specific initial state and relevant environmental constants, there is no ambiguity about which rule should be applied at any given time (i.e.\u00a0which state transition is allowed to take place). This property ensures that the specification is totally precise --- no choice is left to the implementor and any two implementations must behave the same when it comes to deciding whether a block is valid.</p>"},{"location":"mkdocs/admonitions/","title":"Admonitions","text":"<p>From the markdown...</p> <p><pre><code>!!! note \"Title of the callout\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> ...MkDocs produces:</p> <p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"mkdocs/admonitions/#collapsible-callouts","title":"Collapsible callouts","text":"<p>From the markdown... </p> <pre><code>??? info \"Collapsible callout\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>... MkDocs produces:</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"mkdocs/code-blocks/","title":"Code blocks","text":"<pre><code>    ```py title=\"add_numbers.py\" linenums=\"1\" hl_lines=\"2-4\"\n    # Function to add two numbers\n    def add_two_numbers(num1, num2):\n        return num1 + num2\n\n    # Example usage\n    result = add_two_numbers(5, 3)\n    print('The sum is:', result)\n    ```\n</code></pre> <p>produces</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre>"},{"location":"mkdocs/content-tabs/","title":"Content tabs","text":""},{"location":"mkdocs/content-tabs/#generic-content","title":"Generic Content","text":"<p>From the markdown...</p> <pre><code>=== \"Plain text\"\n\n    This is some plain text\n\n=== \"Unordered list\"\n\n    * First item\n    * Second item\n    * Third item\n\n=== \"Ordered list\"\n\n    1. First item\n    2. Second item\n    3. Third item\n</code></pre> <p>...MkDocs produces</p> Plain textUnordered listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"mkdocs/content-tabs/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":"<p>From the markdown...</p> <pre><code>=== \"Python\"\n\n    ```py\n    def main():\n        print(\"Hello world!\")\n\n    if __name__ == \"__main__\":\n        main()\n    ```\n\n=== \"JavaScript\"\n\n    ```js\n    function main() {\n        console.log(\"Hello world!\");\n    }\n\n    main();\n    ```\n</code></pre> <p>...MkDocs produces</p> PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre>"},{"location":"mkdocs/diagrams/","title":"Diagram Examples","text":""},{"location":"mkdocs/diagrams/#flowcharts","title":"Flowcharts","text":"<p>From the markdown...</p> <pre><code>    ```mermaid\n    graph LR\n      A[Start] --&gt; B{Failure?};\n      B --&gt;|Yes| C[Investigate...];\n      C --&gt; D[Debug];\n      D --&gt; B;\n      B ----&gt;|No| E[Success!];\n    ```\n</code></pre> <p>...MkDocs produces</p> <pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre>"},{"location":"mkdocs/diagrams/#sequence-diagrams","title":"Sequence Diagrams","text":"<p>From the markdown...</p> <p><pre><code>    ```mermaid\n    sequenceDiagram\n      autonumber\n      Server-&gt;&gt;Terminal: Send request\n      loop Health\n          Terminal-&gt;&gt;Terminal: Check for health\n      end\n      Note right of Terminal: System online\n      Terminal--&gt;&gt;Server: Everything is OK\n      Terminal-&gt;&gt;Database: Request customer data\n      Database--&gt;&gt;Terminal: Customer data\n    ```\n</code></pre> ...MkDocs produces</p> <pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre>"}]}